<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="generate.AuthDao">
  <resultMap id="BaseResultMap" type="generate.Auth">
    <id column="auth_id" jdbcType="INTEGER" property="authId" />
    <result column="auth_name" jdbcType="VARCHAR" property="authName" />
    <result column="auth_value" jdbcType="VARCHAR" property="authValue" />
    <result column="state" jdbcType="TINYINT" property="state" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    auth_id, auth_name, auth_value, `state`, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from auth
    where auth_id = #{authId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth
    where auth_id = #{authId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="auth_id" keyProperty="authId" parameterType="generate.Auth" useGeneratedKeys="true">
    insert into auth (auth_name, auth_value, `state`, 
      create_time, update_time)
    values (#{authName,jdbcType=VARCHAR}, #{authValue,jdbcType=VARCHAR}, #{state,jdbcType=TINYINT}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" keyColumn="auth_id" keyProperty="authId" parameterType="generate.Auth" useGeneratedKeys="true">
    insert into auth
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="authName != null">
        auth_name,
      </if>
      <if test="authValue != null">
        auth_value,
      </if>
      <if test="state != null">
        `state`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="authName != null">
        #{authName,jdbcType=VARCHAR},
      </if>
      <if test="authValue != null">
        #{authValue,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="generate.Auth">
    update auth
    <set>
      <if test="authName != null">
        auth_name = #{authName,jdbcType=VARCHAR},
      </if>
      <if test="authValue != null">
        auth_value = #{authValue,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        `state` = #{state,jdbcType=TINYINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where auth_id = #{authId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="generate.Auth">
    update auth
    set auth_name = #{authName,jdbcType=VARCHAR},
      auth_value = #{authValue,jdbcType=VARCHAR},
      `state` = #{state,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where auth_id = #{authId,jdbcType=INTEGER}
  </update>
</mapper>